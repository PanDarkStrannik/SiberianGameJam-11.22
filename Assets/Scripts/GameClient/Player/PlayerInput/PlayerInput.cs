//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Settings/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace GameClient.PlayerInput
{
    public partial class @PlayerInput : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""MainInput"",
            ""id"": ""12de6228-c7a0-4651-92af-37d5cb763df7"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e491b165-a07c-49f0-b55f-a084bbcdb501"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePos"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2a9a7b2d-9a1b-4dc4-9896-f23b880a7692"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""80c49b2c-c81a-4909-8b45-306addf8b490"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseClickLeft"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c664ea27-dba0-4a80-9753-bee430e5f229"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""69558c62-f63c-4cfb-a111-fa2e16117deb"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1248cafe-ec9b-4480-b677-cd7ae1e16a96"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""74ee3093-22ac-43b7-bcd0-52c354b0f877"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""93e81400-1549-4fe4-b4d3-8f2ea6fabe38"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""54725692-55c8-4033-8e4d-445443692682"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""a5ebbdc9-17fc-49d5-9322-ec7acc5318ce"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4b899486-03ce-46c3-99a0-e61b8fa585a6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4dec6c23-db5b-444f-9929-9abe663f6533"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a43b14fe-3146-461d-968d-f2303631ff7c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fd0bc7cb-2537-4b8f-b5e0-977bc10d61f5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ab34e43b-5af0-42b5-9279-13ac91ade081"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""MousePos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""189dc3d6-e4e8-46b1-81cd-dec70fc76171"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3615658-59cf-40b1-9aef-b20e8471e9b5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PlayerControlls"",
                    ""action"": ""MouseClickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PlayerControlls"",
            ""bindingGroup"": ""PlayerControlls"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // MainInput
            m_MainInput = asset.FindActionMap("MainInput", throwIfNotFound: true);
            m_MainInput_Move = m_MainInput.FindAction("Move", throwIfNotFound: true);
            m_MainInput_MousePos = m_MainInput.FindAction("MousePos", throwIfNotFound: true);
            m_MainInput_MouseDelta = m_MainInput.FindAction("MouseDelta", throwIfNotFound: true);
            m_MainInput_MouseClickLeft = m_MainInput.FindAction("MouseClickLeft", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // MainInput
        private readonly InputActionMap m_MainInput;
        private IMainInputActions m_MainInputActionsCallbackInterface;
        private readonly InputAction m_MainInput_Move;
        private readonly InputAction m_MainInput_MousePos;
        private readonly InputAction m_MainInput_MouseDelta;
        private readonly InputAction m_MainInput_MouseClickLeft;
        public struct MainInputActions
        {
            private @PlayerInput m_Wrapper;
            public MainInputActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_MainInput_Move;
            public InputAction @MousePos => m_Wrapper.m_MainInput_MousePos;
            public InputAction @MouseDelta => m_Wrapper.m_MainInput_MouseDelta;
            public InputAction @MouseClickLeft => m_Wrapper.m_MainInput_MouseClickLeft;
            public InputActionMap Get() { return m_Wrapper.m_MainInput; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MainInputActions set) { return set.Get(); }
            public void SetCallbacks(IMainInputActions instance)
            {
                if (m_Wrapper.m_MainInputActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMove;
                    @MousePos.started -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMousePos;
                    @MousePos.performed -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMousePos;
                    @MousePos.canceled -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMousePos;
                    @MouseDelta.started -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMouseDelta;
                    @MouseDelta.performed -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMouseDelta;
                    @MouseDelta.canceled -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMouseDelta;
                    @MouseClickLeft.started -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMouseClickLeft;
                    @MouseClickLeft.performed -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMouseClickLeft;
                    @MouseClickLeft.canceled -= m_Wrapper.m_MainInputActionsCallbackInterface.OnMouseClickLeft;
                }
                m_Wrapper.m_MainInputActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @MousePos.started += instance.OnMousePos;
                    @MousePos.performed += instance.OnMousePos;
                    @MousePos.canceled += instance.OnMousePos;
                    @MouseDelta.started += instance.OnMouseDelta;
                    @MouseDelta.performed += instance.OnMouseDelta;
                    @MouseDelta.canceled += instance.OnMouseDelta;
                    @MouseClickLeft.started += instance.OnMouseClickLeft;
                    @MouseClickLeft.performed += instance.OnMouseClickLeft;
                    @MouseClickLeft.canceled += instance.OnMouseClickLeft;
                }
            }
        }
        public MainInputActions @MainInput => new MainInputActions(this);
        private int m_PlayerControllsSchemeIndex = -1;
        public InputControlScheme PlayerControllsScheme
        {
            get
            {
                if (m_PlayerControllsSchemeIndex == -1) m_PlayerControllsSchemeIndex = asset.FindControlSchemeIndex("PlayerControlls");
                return asset.controlSchemes[m_PlayerControllsSchemeIndex];
            }
        }
        public interface IMainInputActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnMousePos(InputAction.CallbackContext context);
            void OnMouseDelta(InputAction.CallbackContext context);
            void OnMouseClickLeft(InputAction.CallbackContext context);
        }
    }
}
